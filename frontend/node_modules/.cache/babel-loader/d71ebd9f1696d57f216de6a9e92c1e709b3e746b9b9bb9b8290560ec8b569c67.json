{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mobile_AI\\\\FRONTEND\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  loading: true,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        loading: false,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      console.log('=== AUTH CHECK STARTED ===');\n      const token = localStorage.getItem('token');\n      console.log('Token from localStorage:', token);\n      if (token) {\n        try {\n          console.log('Token found, calling authAPI.getMe()');\n          const response = await authAPI.getMe();\n          console.log('Auth response:', response.data);\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: {\n              user: response.data.user,\n              token\n            }\n          });\n          console.log('User set successfully:', response.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'AUTH_FAILURE',\n            payload: 'Session expired'\n          });\n        }\n      } else {\n        console.log('No token found, setting auth failure');\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: null\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await authAPI.login(email, password);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    dispatch({\n      type: 'AUTH_START'\n    });\n    try {\n      const response = await authAPI.register(name, email, password);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: {\n          user,\n          token\n        }\n      });\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await authAPI.updateProfile(profileData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: response.data.user\n      });\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await authAPI.changePassword(currentPassword, newPassword);\n      toast.success('Password changed successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Password change failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","localStorage","getItem","loading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","checkAuth","console","log","response","getMe","data","removeItem","login","email","password","setItem","success","_error$response","_error$response$data","message","register","name","_error$response2","_error$response2$data","logout","updateProfile","profileData","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["E:/Mobile_AI/FRONTEND/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return { ...state, loading: true, error: null };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.token,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        token: null,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      console.log('=== AUTH CHECK STARTED ===');\r\n      const token = localStorage.getItem('token');\r\n      console.log('Token from localStorage:', token);\r\n      \r\n      if (token) {\r\n        try {\r\n          console.log('Token found, calling authAPI.getMe()');\r\n          const response = await authAPI.getMe();\r\n          console.log('Auth response:', response.data);\r\n          dispatch({\r\n            type: 'AUTH_SUCCESS',\r\n            payload: { user: response.data.user, token }\r\n          });\r\n          console.log('User set successfully:', response.data.user);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'AUTH_FAILURE', payload: 'Session expired' });\r\n        }\r\n      } else {\r\n        console.log('No token found, setting auth failure');\r\n        dispatch({ type: 'AUTH_FAILURE', payload: null });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    dispatch({ type: 'AUTH_START' });\r\n    try {\r\n      const response = await authAPI.login(email, password);\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      dispatch({\r\n        type: 'AUTH_SUCCESS',\r\n        payload: { user, token }\r\n      });\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      dispatch({ type: 'AUTH_FAILURE', payload: message });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    dispatch({ type: 'AUTH_START' });\r\n    try {\r\n      const response = await authAPI.register(name, email, password);\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem('token', token);\r\n      dispatch({\r\n        type: 'AUTH_SUCCESS',\r\n        payload: { user, token }\r\n      });\r\n      \r\n      toast.success('Registration successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      dispatch({ type: 'AUTH_FAILURE', payload: message });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await authAPI.updateProfile(profileData);\r\n      dispatch({\r\n        type: 'UPDATE_USER',\r\n        payload: response.data.user\r\n      });\r\n      toast.success('Profile updated successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await authAPI.changePassword(currentPassword, newPassword);\r\n      toast.success('Password changed successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password change failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}